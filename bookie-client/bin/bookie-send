#!/usr/bin/env ruby

require 'optparse'

#To do: restore for production.
=begin
unless Process.uid == 0
  $stderr.puts "This command must be run as root."
  exit 1
end
=end

#For development
$LOAD_PATH.concat Dir.glob(File.join(Dir.pwd, "../*/lib"))

#For development
ENV['TORQUEROOT'] = 'snapshot'

require 'bookie-client/sender'

#for development
#config = Bookie::Config.new('/etc/bookie/config.json')
config = Bookie::Config.new('snapshot/config.json')

#For development
config.excluded_users = Set.new([])

config.connect

sender = Bookie::Sender::Sender.by_name(config.system_type).new(config)

#Process arguments.
filename = nil
will_decommission = false
system_hostname = config.hostname
system_end_time = Time.new

if ARGV[0]
  if /\d{4}-\d{2}-\d{2}/.match(ARGV[0])
    filename = Date.parse(ARGV[0])
  elsif ARGV[0][0] != '-'
    filename = ARGV[0]
  end
end

opts = OptionParser.new do |opts|
  opts.banner = "To do: usage instructions"
  
  opts.on("--decommission [HOSTNAME] [TIME]",
  String, String,
  "Decommission the system with the given hostname at the given time") do |hostname, time|
    will_decommission = true
    date = :flush
    system_hostname = hostname if hostname
    system_end_time = Time.parse(time) if time
  end
  
  #To do: force option for pacct conflicts? Just let the user remove the offending file?
end

opts.parse!(ARGV)

sender.send_data(filename)
sender.decommission(system_hostname, system_end_time) if will_decommission
