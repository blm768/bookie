#!/usr/bin/env ruby

#For development
$LOAD_PATH.concat Dir.glob(File.join(Dir.pwd, "../*/lib"))

require 'bookie-client'

#For development
config = Bookie::Config.new('../snapshot/config.json')
config.connect
client = Bookie::Client::Client.new(config)

jobs = Bookie::Database::Job

include_details = false

#Process arguments
args = ARGV[0 .. -1]
filters = {}
while args && args.length > 0
  arg = args[0]
  #Is this a switch?
  if arg[0 .. 1] == "--"
    switch = arg[2 .. -1].gsub(/-/, "_")
    #To do: verify that the next argument isn't a switch.
    case switch
      when 'details'
        include_details = true
      when 'start_time'
        if args.length < 3
          $stderr.puts "2 arguments expected for filter"
          exit 1
        end
        begin
          filters[switch.intern] = args[1 .. 2].map{ |s| Time.parse(s) }
        rescue ArgumentError
          $stderr.puts "Invalid time format"
          exit 1
        end
        puts filters
        args = args[2 .. -1]
      else
        if args.length < 2
          $stderr.puts "Argument expected for filter"
          exit 1
        end
        filters[switch.intern] = args[1]
        args = args[1 .. -1]
    end
  end
  args = args[1 .. -1]
end

jobs = Bookie::Filter::apply_filters(jobs, filters)

#To do: ensure that the query isn't performed twice.
client.print_summary(jobs)
client.print_jobs(jobs) if include_details
