#!/usr/bin/env rake
require 'bundler'
require "bundler/gem_tasks"
require "rspec/core/rake_task"

task :default => :spec

desc "Run specs"
RSpec::Core::RakeTask.new(:spec) do |task|
  task.rspec_opts =%w{--color --format progress}
  task.pattern = 'spec/*_spec.rb'
end

task :rdoc do
  system("rdoc rdoc lib")
end

#Returns whether the given file is older than its dependencies (or doesn't even exist)
def older(file, *dep_files)
  dep_files.each do |dep_file|
    return true if !File.exists?(file) || File.mtime(file) < File.mtime(dep_file)
  end
  false
end

desc "Build RPM and dependencies (designed for use on CentOS)"
task :rpm_deps do
  gem_filenames = {
    "pacct" => "pacct-0.8.4-universal-linux.gem"
  }

  lockfile = Bundler::LockfileParser.new(Bundler.read_file("Gemfile.lock"))

  home_dir = ENV['HOME']
  spec_dir = File.join(home_dir, 'rpmbuild/SPECS')
  src_dir = File.join(home_dir, 'rpmbuild/SOURCES')
  rpm_dir = File.join(home_dir, 'rpmbuild/RPMS')

  FileUtils.mkdir_p(spec_dir)
  FileUtils.mkdir_p(src_dir)

  lockfile.specs.each do |spec|
    puts "#{spec.name} (#{spec.version})"

    spec_filename = File.join(spec_dir, "rubygem-#{spec.name}.spec")

    gem_filename = gem_filenames[spec.name] || "#{spec.name}-#{spec.version}.gem"

    system("gem fetch #{spec.name} -v #{spec.version}") unless File.exists?(gem_filename)

    template = "rpm/#{spec.name}.erb"
    template = "rpm/default.erb" unless File.exists?(template)

    system("gem2rpm #{gem_filename} -t #{template} > #{spec_filename}") if older(spec_filename, gem_filename, template)

    src = File.join(src_dir, gem_filename)
    FileUtils.cp(gem_filename, src_dir) if older(src, gem_filename)

    rpm_glob = File.join(rpm_dir, "*/rubygem-#{spec.name}-#{spec.version}-*.rpm")
    rpm_glob_results = Dir.glob(rpm_glob)
    if rpm_glob_results.length > 1
      puts "Multiple RPMs exist for #{spec.name} (#{spec.version}):"
      rpm_glob_results.each{ |r| puts "    #{r}" }
      puts "Unable to resolve dependency due to ambiguous target"
      exit 1
    end

    if rpm_glob_results.length == 0 || older(rpm_glob_results[0], spec_filename)
      msg = `rpmbuild -bb #{spec_filename}`
      unless $?.success?
        puts msg
        exit 1
      end
    end
  end
end

