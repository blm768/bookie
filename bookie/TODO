First priority:
- Add user IDs
- Optimize summarization stuff.
  - Put all the sums in one query.
- Filter out 0-time jobs (use Ruby config w/ block?)
- Update executables.

Later:
- Connect to users DB or LDAP?

Testing:
- Test executables somehow? (and integrate with Travis CI)!
- Use FactoryGirl to generate test objects?

Optimization:
- Use bulk inserts?
- Wrap send jobs in a transaction?

Cleanup:
- Specify dependency versions
- Remove find_or_create methods.
- Replace by_* methods with a "find_all_by()" method? (or just "where"...)
- Use "let" in RSpect tests?
- Replace 3600 with 2.hours, etc.
- Also clear out other "magic" numbers.
- Split some tests up.
- Make sure all source files have the required "require"s
- Replace Mocha with rspec-mocks?
- Fix memory specification issue
- Replace <tt> tags in docs with <code>?
- Remove spreadsheet formatter?

Expansion:
- Use concurrency control?

Validate uniqueness?
Unit test uniqueness constraints?
Make units more independent.
Make unit test success more independent.
Set up guard-rspec gem for testing?

Data consistency considerations:
If a user is deleted, how to we handle that? Mark the user's processes with an "unknown" UID?

